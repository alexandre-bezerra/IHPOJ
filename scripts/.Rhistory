microdados <- readRDS("../dados/n_microdados_filtrados.RDS")
# Ordena√ß√£o dos dados por indiv√≠duo e tempo
microdados <- microdados %>%
arrange(id_pessoa, Ano, Trimestre)
# Cria√ß√£o da vari√°vel de estado no pr√≥ximo trimestre
microdados <- microdados %>%
group_by(id_pessoa) %>%
mutate(estado_t1 = lead(estado_ocupacional), Ano_t1 = lead(Ano),
Trimestre_t1 = lead(Trimestre)) %>%
ungroup()
# Filtro apenas de transi√ß√µes consecutivas (diferen√ßa de 1 trimestre)
microdados_transicao <- microdados %>%
filter(!is.na(estado_ocupacional), !is.na(estado_t1)) %>%
mutate(distancia_temporal = (Ano_t1 - Ano) * 4 + (Trimestre_t1 - Trimestre)
) %>%
filter(distancia_temporal == 1)
# Separa√ß√£o dos per√≠odos de an√°lise
microdados_transicao <- microdados_transicao %>%
mutate(periodo = case_when(
Ano < 2020 ~ "Pr√©-pandemia",
Ano >= 2020 & Ano <= 2021 ~ "Durante pandemia",
Ano > 2021 ~ "P√≥s-pandemia"
))
# Explicita√ß√£o das vari√°veis pessoais
microdados_transicao <- microdados_transicao %>%
mutate(
# Agrupar sexo
sexo = case_when(
V2007 == 1 ~ "Homem",
V2007 == 2 ~ "Mulher",
TRUE ~ NA_character_
),
# Agrupar ra√ßa
raca = case_when(
V2010 == 1 ~ "Branca",
V2010 == 2 ~ "Preta",
V2010 == 4 ~ "Parda",
TRUE ~ "Outros"
),
# Agrupar escolaridade (n√≠vel mais elevado)
escolaridade = case_when(
V3009A %in% 1:3 ~ "Fundamental ou menos",
V3009A %in% 4:5 ~ "M√©dio",
V3009A >= 6 ~ "Superior",
TRUE ~ NA_character_
),
# Agrupar idade em faixas
faixa_idade = case_when(
V2009 <= 17 ~ "Adolescente (14-17)",
V2009 <= 24 ~ "Jovem (18-24)",
V2009 <= 29 ~ "Jovem adulto (25-29)",
V2009 > 29 ~ "Adulto (>29)",
TRUE ~ NA_character_
),
# Agrupar localidade (capital ou interior)
localidade = case_when(
V1022 == 1 ~ "Urbano",
V1022 == 2 ~ "Rural",
TRUE ~ NA_character_
)
)
# Criar vari√°vel resposta: 1 se saiu do desemprego para emprego
microdados_transicao <- microdados_transicao %>%
mutate(transicao_emprego = ifelse(estado_ocupacional == 0 &
estado_t1 == 1, 1, 0)) %>%
filter(!is.na(transicao_emprego))
# Preparando vari√°veis dependentes
# criar vari√°vel bin√°ria para mulher
microdados_transicao$mulher <- ifelse(microdados_transicao$V2007 == 2, 1, 0)
microdados_transicao$raca <- factor(microdados_transicao$raca,
levels = c("Branca", "Preta", "Parda","Outros"))
microdados_transicao$escolaridade <- factor(microdados_transicao$escolaridade,
levels = c("Fundamental ou menos","M√©dio", "Superior"))
microdados_transicao$localidade <- factor(microdados_transicao$localidade,
levels = c("Rural", "Urbana"))
microdados_transicao$periodo <- factor(microdados_transicao$periodo,
levels = c("Pr√©-pandemia", "Durante pandemia", "P√≥s-pandemia"))
View(microdados_transicao)
microdados_transicao$faixa_idade <- factor(microdados_transicao$faixa_idade,
levels= c("Adolescente (14-17)", "Jovem (18-24)", "Jovem adulto (25-29)",
"Adulto (>29)"))
modelo_logit <- glm(transicao_emprego ~ mulher + raca +
escolaridade + localidade + faixa_idade + periodo,
data = microdados_transicao,
family = binomial)
# Modelo Sem Intera√ß√µes
modelo_logit <- glm(transicao_emprego ~ mulher + raca +
escolaridade + localidade + faixa_idade + periodo,
data = microdados_transicao,
family = binomial)
# criar vari√°vel bin√°ria para mulher
microdados_transicao$mulher <- ifelse(microdados_transicao$V2007 == 2, 1, 0)
microdados_transicao$raca <- factor(microdados_transicao$raca,
levels = c("Branca", "Preta", "Parda","Outros"))
microdados_transicao$escolaridade <- factor(microdados_transicao$escolaridade,
levels = c("Fundamental ou menos","M√©dio", "Superior"))
microdados_transicao$localidade <- factor(microdados_transicao$localidade,
levels = c("Rural", "Urbana"))
microdados_transicao$periodo <- factor(microdados_transicao$periodo,
levels = c("Pr√©-pandemia", "Durante pandemia", "P√≥s-pandemia"))
microdados_transicao$faixa_idade <- factor(microdados_transicao$faixa_idade,
levels= c("Adolescente (14-17)", "Jovem (18-24)", "Jovem adulto (25-29)",
"Adulto (>29)"))
# Modelo Sem Intera√ß√µes
modelo_logit <- glm(transicao_emprego ~ mulher + raca +
escolaridade + localidade + faixa_idade + periodo,
data = microdados_transicao,
family = binomial)
microdados_transicao$mulher <- ifelse(microdados_transicao$V2007 == 2, 1, 0)
microdados_transicao$raca <- factor(microdados_transicao$raca,
levels = c("Branca", "Preta", "Parda","Outros"))
microdados_transicao$escolaridade <- factor(microdados_transicao$escolaridade,
levels = c("Fundamental ou menos","M√©dio", "Superior"))
microdados_transicao$urbana <- ifelse(microdados_transicao$localidade == "Urbana", 1, 0)
microdados_transicao$periodo <- factor(microdados_transicao$periodo,
levels = c("Pr√©-pandemia", "Durante pandemia", "P√≥s-pandemia"))
microdados_transicao$faixa_idade <- factor(microdados_transicao$faixa_idade,
levels= c("Adolescente (14-17)", "Jovem (18-24)", "Jovem adulto (25-29)",
"Adulto (>29)"))
# Modelo Sem Intera√ß√µes
modelo_logit <- glm(transicao_emprego ~ mulher + raca +
escolaridade + localidade + faixa_idade + periodo,
data = microdados_transicao,
family = binomial)
microdados <- readRDS("../dados/n_microdados_filtrados.RDS")
microdados <- microdados %>%
arrange(id_pessoa, Ano, Trimestre)
# Cria√ß√£o da vari√°vel de estado no pr√≥ximo trimestre
microdados <- microdados %>%
group_by(id_pessoa) %>%
mutate(estado_t1 = lead(estado_ocupacional), Ano_t1 = lead(Ano),
Trimestre_t1 = lead(Trimestre)) %>%
ungroup()
# Filtro apenas de transi√ß√µes consecutivas (diferen√ßa de 1 trimestre)
microdados_transicao <- microdados %>%
filter(!is.na(estado_ocupacional), !is.na(estado_t1)) %>%
mutate(distancia_temporal = (Ano_t1 - Ano) * 4 + (Trimestre_t1 - Trimestre)
) %>%
filter(distancia_temporal == 1)
# Separa√ß√£o dos per√≠odos de an√°lise
microdados_transicao <- microdados_transicao %>%
mutate(periodo = case_when(
Ano < 2020 ~ "Pr√©-pandemia",
Ano >= 2020 & Ano <= 2021 ~ "Durante pandemia",
Ano > 2021 ~ "P√≥s-pandemia"
))
# Explicita√ß√£o das vari√°veis pessoais
microdados_transicao <- microdados_transicao %>%
mutate(
# Agrupar sexo
sexo = case_when(
V2007 == 1 ~ "Homem",
V2007 == 2 ~ "Mulher",
TRUE ~ NA_character_
),
# Agrupar ra√ßa
raca = case_when(
V2010 == 1 ~ "Branca",
V2010 == 2 ~ "Preta",
V2010 == 4 ~ "Parda",
TRUE ~ "Outros"
),
# Agrupar escolaridade (n√≠vel mais elevado)
escolaridade = case_when(
V3009A %in% 1:3 ~ "Fundamental ou menos",
V3009A %in% 4:5 ~ "M√©dio",
V3009A >= 6 ~ "Superior",
TRUE ~ NA_character_
),
# Agrupar idade em faixas
faixa_idade = case_when(
V2009 <= 17 ~ "Adolescente (14-17)",
V2009 <= 24 ~ "Jovem (18-24)",
V2009 <= 29 ~ "Jovem adulto (25-29)",
V2009 > 29 ~ "Adulto (>29)",
TRUE ~ NA_character_
),
# Agrupar localidade (capital ou interior)
localidade = case_when(
V1022 == 1 ~ "Urbano",
V1022 == 2 ~ "Rural",
TRUE ~ NA_character_
)
)
# Criar vari√°vel resposta: 1 se saiu do desemprego para emprego
microdados_transicao <- microdados_transicao %>%
mutate(transicao_emprego = ifelse(estado_ocupacional == 0 &
estado_t1 == 1, 1, 0)) %>%
filter(!is.na(transicao_emprego))
# Preparando vari√°veis dependentes
# criar vari√°vel bin√°ria para mulher
microdados_transicao$mulher <- ifelse(microdados_transicao$V2007 == 2, 1, 0)
microdados_transicao$raca <- factor(microdados_transicao$raca,
levels = c("Branca", "Preta", "Parda","Outros"))
microdados_transicao$escolaridade <- factor(microdados_transicao$escolaridade,
levels = c("Fundamental ou menos","M√©dio", "Superior"))
microdados_transicao$urbana <- ifelse(microdados_transicao$localidade == "Urbana", 1, 0)
microdados_transicao$periodo <- factor(microdados_transicao$periodo,
levels = c("Pr√©-pandemia", "Durante pandemia", "P√≥s-pandemia"))
microdados_transicao$faixa_idade <- factor(microdados_transicao$faixa_idade,
levels= c("Adolescente (14-17)", "Jovem (18-24)", "Jovem adulto (25-29)",
"Adulto (>29)"))
# Modelo Sem Intera√ß√µes
modelo_logit <- glm(transicao_emprego ~ mulher + raca +
escolaridade + localidade + faixa_idade + periodo,
data = microdados_transicao,
family = binomial)
summary(modelo_logit)          # Coeficientes em log-odds
library(pscl)
install.packages(pscl)
install.packages("pscl")
library(pscl)
pR2(modelo_logit)
# Fun√ß√£o para interpretar automaticamente um summary de modelo logit
interpretar_logit_summary <- function(modelo) {
s <- summary(modelo)
cat("üìå RESUMO INTERPRETATIVO DO MODELO LOGIT\n")
cat("--------------------------------------------------\n")
cat("‚Üí N√∫mero de observa√ß√µes usadas:", s$df[1] + s$df[2], "\n")
cat("‚Üí Par√¢metros estimados:", s$df[1], "\n")
cat("‚Üí Null deviance:", s$null.deviance, "em", s$df.null, "g.l.\n")
cat("‚Üí Residual deviance:", s$deviance, "em", s$df.residual, "g.l.\n")
cat("‚Üí AIC do modelo:", AIC(modelo), "\n")
if (!is.null(modelo$na.action)) {
cat("‚ö†Ô∏è  Observa√ß√µes removidas por dados faltantes:", length(modelo$na.action), "\n")
}
cat("--------------------------------------------------\n")
cat("Coeficientes:\n")
printCoefmat(s$coefficients, P.values = TRUE, has.Pvalue = TRUE)
cat("--------------------------------------------------\n")
# Pseudo-R¬≤ (McFadden)
if (requireNamespace("pscl", quietly = TRUE)) {
library(pscl)
pseudo <- pR2(modelo)
cat("üìà Pseudo-R¬≤ (McFadden):", round(pseudo["McFadden"], 4), "\n")
} else {
cat("‚ÑπÔ∏è Instale o pacote 'pscl' para obter o Pseudo-R¬≤.\n")
}
}
interpretar_logit_summary(modelo_logit)
# Modelo com Intera√ß√£o
modelo_interacoes <- glm(transicao_emprego ~ mulher * periodo + raca * periodo +
escolaridade * periodo + localidade * periodo +
faixa_idade * periodo,
data = microdados_transicao,
family = binomial)
interpretar_logit_summary(modelo_interacoes)
interpretar_logit_summary(modelo_interacoes)
microdados_transicao$pandemia_fase <- factor(
microdados_transicao$periodo,
levels = c("Pr√©-pandemia", "Durante pandemia", "P√≥s-pandemia")
)
modelo_3fases <- glm(
transicao_emprego ~ pandemia_fase * (mulher + raca + escolaridade +
localidade + faixa_idade),
data = microdados_transicao,
family = binomial
)
interpretar_logit_summary(modelo_3fases)
# Cria√ß√£o de identifica√ß√£o de transi√ß√£o para o desemprego
microdados_transicao <- microdados_transicao %>%
mutate(transicao_desemprego = ifelse(estado_ocupacional == 1 & estado_t1 == 0,
1, 0)) %>%
filter(!is.na(transicao_desemprego))
# Constru√ß√£o de vari√°vel de per√≠odo
microdados_transicao <- microdados_transicao %>%
mutate(periodo = paste(Ano, Trimestre, sep = "."))
# Obten√ß√£o de dados de ocupa√ß√£o geral
caged <- read.csv("admissoes_caged.csv", sep=";") %>%
mutate(data = as.Date(paste0(ano, "-", mes, "-01")))
# Cria√ß√£o de identifica√ß√£o de transi√ß√£o para o desemprego
microdados_transicao <- microdados_transicao %>%
mutate(transicao_desemprego = ifelse(estado_ocupacional == 1 & estado_t1 == 0,
1, 0)) %>%
filter(!is.na(transicao_desemprego))
# Constru√ß√£o de vari√°vel de per√≠odo
microdados_transicao <- microdados_transicao %>%
mutate(periodo = paste(Ano, Trimestre, sep = "."))
# Obten√ß√£o de dados de ocupa√ß√£o geral
caged <- read.csv("../dados/admissoes_caged.csv", sep=";") %>%
mutate(data = as.Date(paste0(ano, "-", mes, "-01")))
admissoes_trimestre <- caged %>%
mutate(Ano = year(data),
Trimestre = quarter(data)) %>%
group_by(Ano, Trimestre) %>%
summarise(vagas_formais = sum(admissao), .groups = "drop") %>%
mutate(periodo = paste(Ano, Trimestre, sep = "."))
# Cria√ß√£o de Painel
painel_geral <- microdados_transicao %>%
mutate(periodo = paste(Ano, Trimestre, sep = ".")) %>%
filter(estado_ocupacional %in% c(0, 1), !is.na(estado_t1)) %>%
group_by(periodo) %>%
summarise(
U = sum(estado_ocupacional == 0),
E = sum(estado_ocupacional == 1),
T_UE = sum(transicao_emprego == 1, na.rm = TRUE)
) %>%
mutate(f_t = T_UE / U)
# Uni√£o ao painel de jovens
painel_geral <- painel_geral %>%
left_join(admissoes_trimestre, by = "periodo") %>%
mutate(theta_caged = vagas_formais / U)
###################### REGRESS√ÉO ##############################################
modelo_matching <- lm(log(f_t) ~ log(theta_caged), data = painel_geral)
summary(modelo_matching)
interpretar_logit_summary(modelo_matching)
interpretar_logit_summary(modelo_matching)
summary(modelo_matching)
View(painel_geral)
################################################################################
# 1 - Carregamento dos pacotes necess√°rios #####################################
################################################################################
library(haven)
library(dplyr)
library(stringr)
library(lubridate)
library(ggplot2)
library(tidyr)
library(fmsb)
library(ggeffects)
library(patchwork)
library(zoo)
library(tidyverse)
################################################################################
# 2 - Importa√ß√£o dos microdados filtrados ######################################
################################################################################
microdados <- readRDS("../dados/microdados_filtrados.RDS")
################################################################################
# 3 - Prepara√ß√£o dos microdados e cria√ß√£o de novas vari√°veis ###################
################################################################################
# Ordena√ß√£o dos dados por indiv√≠duo e tempo
microdados <- microdados %>%
arrange(id_pessoa, Ano, Trimestre)
# Cria√ß√£o da vari√°vel de estado no pr√≥ximo trimestre
microdados <- microdados %>%
group_by(id_pessoa) %>%
mutate(estado_t1 = lead(estado_ocupacional), Ano_t1 = lead(Ano),
Trimestre_t1 = lead(Trimestre)) %>%
ungroup()
# Filtro apenas de transi√ß√µes consecutivas (diferen√ßa de 1 trimestre)
microdados_transicao <- microdados %>%
filter(!is.na(estado_ocupacional), !is.na(estado_t1)) %>%
mutate(distancia_temporal = (Ano_t1 - Ano) * 4 + (Trimestre_t1 - Trimestre)
) %>%
filter(distancia_temporal == 1)
# Separa√ß√£o dos per√≠odos de an√°lise
microdados_transicao <- microdados_transicao %>%
mutate(periodo = case_when(
Ano < 2020 ~ "Pr√©-pandemia",
Ano >= 2020 & Ano <= 2021 ~ "Durante pandemia",
Ano > 2021 ~ "P√≥s-pandemia"
))
# Explicita√ß√£o das vari√°veis pessoais
microdados_transicao <- microdados_transicao %>%
mutate(
# Agrupar sexo
sexo = case_when(
V2007 == 1 ~ "Homem",
V2007 == 2 ~ "Mulher",
TRUE ~ NA_character_
),
# Agrupar ra√ßa
raca = case_when(
V2010 == 1 ~ "Branca",
V2010 == 2 ~ "Preta",
V2010 == 4 ~ "Parda",
TRUE ~ "Outros"
),
# Agrupar escolaridade (n√≠vel mais elevado)
escolaridade = case_when(
V3009A %in% 1:3 ~ "Fundamental ou menos",
V3009A %in% 4:5 ~ "M√©dio",
V3009A >= 6 ~ "Superior",
TRUE ~ NA_character_
),
# Agrupar idade como proxy de experi√™ncia
experiencia = case_when(
V2009 <= 17 ~ "Adolescente (14-17)",
V2009 <= 24 ~ "Jovem (18-24)",
V2009 <= 29 ~ "Jovem adulto (25-29)",
TRUE ~ NA_character_
),
# Agrupar localidade (capital ou interior)
localidade = case_when(
V1022 == 1 ~ "Urbana",
V1022 == 2 ~ "Rural",
TRUE ~ NA_character_
)
)
# Criar vari√°vel resposta: 1 se saiu do desemprego para emprego
microdados_transicao <- microdados_transicao %>%
mutate(transicao_emprego = ifelse(estado_ocupacional == 0 &
estado_t1 == 1, 1, 0)) %>%
filter(!is.na(transicao_emprego))
# Preparando vari√°veis dependentes
# criar vari√°vel bin√°ria para mulher
microdados_transicao$mulher <- ifelse(microdados_transicao$V2007 == 2, 1, 0)
microdados_transicao$raca <- factor(microdados_transicao$raca,
levels = c("Branca", "Preta", "Parda","Outros"))
microdados_transicao$escolaridade <- factor(microdados_transicao$escolaridade,
levels = c("Fundamental ou menos","M√©dio", "Superior"))
microdados_transicao$localidade <- factor(microdados_transicao$localidade,
levels = c("Rural", "Urbana"))
microdados_transicao$periodo <- factor(microdados_transicao$periodo,
levels = c("Pr√©-pandemia", "Durante pandemia", "P√≥s-pandemia"))
microdados_transicao$experiencia <- factor(microdados_transicao$experiencia,
levels= c("Adolescente (14-17)", "Jovem (18-24)", "Jovem adulto (25-29)"))
################################################################################
# 4 - Especifica√ß√£o e Estima√ß√£o de Modelos de regress√£o log√≠stica ##############
################################################################################
# Fun√ß√£o para interpretar automaticamente um summary de modelo logit
interpretar_logit_summary <- function(modelo) {
s <- summary(modelo)
cat("üìå RESUMO INTERPRETATIVO DO MODELO LOGIT\n")
cat("--------------------------------------------------\n")
cat("‚Üí N√∫mero de observa√ß√µes usadas:", s$df[1] + s$df[2], "\n")
cat("‚Üí Par√¢metros estimados:", s$df[1], "\n")
cat("‚Üí Null deviance:", s$null.deviance, "em", s$df.null, "g.l.\n")
cat("‚Üí Residual deviance:", s$deviance, "em", s$df.residual, "g.l.\n")
cat("‚Üí AIC do modelo:", AIC(modelo), "\n")
if (!is.null(modelo$na.action)) {
cat("‚ö†Ô∏è  Observa√ß√µes removidas por dados faltantes:", length(modelo$na.action), "\n")
}
cat("--------------------------------------------------\n")
cat("Coeficientes:\n")
printCoefmat(s$coefficients, P.values = TRUE, has.Pvalue = TRUE)
cat("--------------------------------------------------\n")
# Pseudo-R¬≤ (McFadden)
if (requireNamespace("pscl", quietly = TRUE)) {
library(pscl)
pseudo <- pR2(modelo)
cat("üìà Pseudo-R¬≤ (McFadden):", round(pseudo["McFadden"], 4), "\n")
} else {
cat("‚ÑπÔ∏è Instale o pacote 'pscl' para obter o Pseudo-R¬≤.\n")
}
}
# Modelo Sem Intera√ß√µes
modelo_logit <- glm(transicao_emprego ~ mulher + raca +
escolaridade + localidade + experiencia + periodo,
data = microdados_transicao,
family = binomial)
interpretar_logit_summary(modelo_logit)
# Modelo com Intera√ß√£o
modelo_interacoes <- glm(transicao_emprego ~ mulher * periodo + raca * periodo +
escolaridade * periodo + localidade * periodo +
faixa_idade * periodo,
data = microdados_transicao,
family = binomial)
interpretar_logit_summary(modelo_interacoes)
# Modelo com Intera√ß√£o
modelo_interacoes <- glm(transicao_emprego ~ mulher * periodo + raca * periodo +
escolaridade * periodo + localidade * periodo +
experiencia * periodo,
data = microdados_transicao,
family = binomial)
interpretar_logit_summary(modelo_interacoes)
microdados_transicao$pandemia_fase <- factor(
microdados_transicao$periodo,
levels = c("Pr√©-pandemia", "Durante pandemia", "P√≥s-pandemia")
)
modelo_3fases <- glm(
transicao_emprego ~ pandemia_fase * (mulher + raca + escolaridade +
localidade + experiencia),
data = microdados_transicao,
family = binomial
)
interpretar_logit_summary(modelo_3fases)
